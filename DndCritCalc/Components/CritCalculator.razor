<MudSelect T="@AttackRoll"
           Label="Saved Attacks"
           @bind-Value="@selectedSavedAttackRoll"
           @bind-Value:after="@OnSelectedAttackChanged">
    @foreach (var attackRoll in savedAttackRolls)
    {
        <MudSelectItem Value="@attackRoll">
            @attackRoll.ToString()
        </MudSelectItem>
    }
</MudSelect>

<MudNumericField @bind-Value="@abilityStat"
                 Label="Ability Stat"
                 Min="0"
                 Max="@int.MaxValue"
                 Variant="Variant.Text" />

<MudNumericField @bind-Value="@bonusDamage"
                 Label="Bonus Damage"
                 Min="0"
                 Max="@int.MaxValue"
                 Variant="Variant.Text" />

@foreach (var damageDie in DamageDice)
{
    <DamageDieComponent DamageDie="@damageDie" />
}

<MudButton OnClick="@RollCrit"
           Variant="@Variant.Filled"
           Color="@Color.Primary"
           ButtonType="@ButtonType.Button"
           StartIcon="@Icons.Material.Filled.Calculate">
    Roll Critical Hit Damage
</MudButton>

@if (outputLines is { Count: > 0 })
{
    <MudText Class="totalDamageDisplay">
        @outputLines.First()
    </MudText>

    @foreach (var outputLine in outputLines.Skip(1))
    {
        <MudText>
            @outputLine
        </MudText>
    }
}
